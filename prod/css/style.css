/* All coding, design, ideas, fantastical inventions, etc. etc. copyright 2014 Kyle Conrad */
/* Contact: kyle@kyleconrad.com */
/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* MIX-INS */
/* ADDITIONAL RESET */
html {
  min-height: 100%;
  height: 100%;
  -webkit-text-size-adjust: none; }

body {
  height: 100%;
  width: 100%;
  position: relative;
  overflow-x: hidden; }

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }
  *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }
  *:focus {
    outline: none; }

/* CLEAR & FLOATS */
.left {
  float: left !important; }

.right {
  float: right !important; }

.clearfix:after {
  clear: both;
  display: table;
  content: ''; }

@media only screen and (max-width: 641px) {
  .nomobile {
    display: none; } }

/* INCLUDED */
/* VARIABLES */
/* GRID */
nav,
div,
article,
section,
main,
footer,
header {
  display: block;
  position: relative; }

/* Z-INDEX & LAYERS */
#error-update {
  z-index: 1005; }

#error-overlay {
  z-index: 1004; }

#button-nav,
#button-sounds {
  z-index: 1000; }

#classic-wipe {
  z-index: 200; }

#load-logo {
  z-index: 180; }

#load-text-container {
  z-index: 179; }

#load-overlay {
  z-index: 175; }

#long-ago {
  z-index: 150; }

#button-close {
  z-index: 125; }

#planet-data,
.planet-nav-arrow {
  z-index: 100; }

#planet-title {
  z-index: 75; }

#star-map {
  z-index: 50; }

nav {
  z-index: 1; }

/* GLYPHS */
@font-face {
  font-family: 'Roboto';
  font-weight: 500;
  font-style: normal;
  src: url("/fonts/Roboto-500.eot");
  src: url("/fonts/Roboto-500.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-500.woff2") format("woff2"), url("/fonts/Roboto-500.woff") format("woff"), url("/fonts/Roboto-500/Roboto-500.ttf") format("truetype"), url("/fonts/Roboto-500/Roboto-500.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 700;
  font-style: normal;
  src: url("/fonts/Roboto-700.eot");
  src: url("/fonts/Roboto-700.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-700.woff2") format("woff2"), url("/fonts/Roboto-700.woff") format("woff"), url("/fonts/Roboto-700.ttf") format("truetype"), url("/fonts/Roboto-700.svg#Roboto") format("svg"); }

@font-face {
  font-family: 'Roboto';
  font-weight: 900;
  font-style: normal;
  src: url("/fonts/Roboto-900.eot");
  src: url("/fonts/Roboto-900.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-900.woff2") format("woff2"), url("/fonts/Roboto-900.woff") format("woff"), url("/fonts/Roboto-900.ttf") format("truetype"), url("/fonts/Roboto-900.svg#Roboto") format("svg"); }

#button-nav {
  cursor: pointer;
  position: absolute;
  top: 2.25rem;
  left: 2.25rem;
  width: 1.75rem;
  height: 1.75rem;
  padding: 0;
  margin: 0;
  background: none;
  border: 0;
  outline: none;
  opacity: 0;
  pointer-events: none;
  -webkit-transform: translate3d(-50%, -50%, 0) rotate(0deg);
  -moz-transform: translate3d(-50%, -50%, 0) rotate(0deg);
  -ms-transform: translate3d(-50%, -50%, 0) rotate(0deg);
  -o-transform: translate3d(-50%, -50%, 0) rotate(0deg);
  transform: translate3d(-50%, -50%, 0) rotate(0deg);
  -webkit-transition: opacity 1s, -webkit-transform 0.125s;
  -moz-transition: opacity 1s, -moz-transform 0.125s;
  transition: opacity 1s, transform 0.125s; }
  .loaded #button-nav {
    opacity: 0.5;
    pointer-events: auto;
    -webkit-transition: opacity 0.1s, -webkit-transform 0.125s;
    -moz-transition: opacity 0.1s, -moz-transform 0.125s;
    transition: opacity 0.1s, transform 0.125s; }
    .loaded #button-nav:hover, .loaded #button-nav:active {
      opacity: 1; }
  .nav-open #button-nav {
    opacity: 1;
    -webkit-transform: translate3d(-50%, -50%, 0) rotate(-90deg);
    -moz-transform: translate3d(-50%, -50%, 0) rotate(-90deg);
    -ms-transform: translate3d(-50%, -50%, 0) rotate(-90deg);
    -o-transform: translate3d(-50%, -50%, 0) rotate(-90deg);
    transform: translate3d(-50%, -50%, 0) rotate(-90deg); }

#button-sounds {
  position: fixed;
  top: 1.25rem;
  right: 1.5rem;
  max-width: 1rem;
  opacity: 0.75;
  -webkit-transition: opacity 0.1s;
  -moz-transition: opacity 0.1s;
  transition: opacity 0.1s; }
  #button-sounds:hover, #button-sounds:active, #button-sounds:focus {
    opacity: 1; }

#button-close {
  cursor: pointer;
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  width: 1.5rem;
  height: 1.5rem;
  display: block;
  background: none;
  border: 0;
  outline: none;
  pointer-events: auto;
  opacity: 0.4;
  -webkit-transition: opacity 0.15s;
  -moz-transition: opacity 0.15s;
  transition: opacity 0.15s; }
  #button-close:before, #button-close:after {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 4px;
    background: white;
    border-radius: 4px;
    content: '';
    -webkit-transform: translate3d(-50%, -50%, 0);
    -moz-transform: translate3d(-50%, -50%, 0);
    -ms-transform: translate3d(-50%, -50%, 0);
    -o-transform: translate3d(-50%, -50%, 0);
    transform: translate3d(-50%, -50%, 0); }
  #button-close:before {
    -webkit-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -moz-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -ms-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -o-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    transform: translate3d(-50%, -50%, 0) rotate(45deg); }
  #button-close:after {
    -webkit-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -moz-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -ms-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -o-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    transform: translate3d(-50%, -50%, 0) rotate(-45deg); }
  #button-close:hover, #button-close:active, #button-close:focus {
    opacity: 0.875; }

.planet-nav-arrow {
  cursor: pointer;
  pointer-events: none;
  position: absolute;
  top: 50%;
  width: 4rem;
  height: 4rem;
  background: none;
  border: 0;
  outline: none;
  opacity: 0;
  -webkit-transition: 1s;
  -moz-transition: 1s;
  transition: 1s; }
  @media only screen and (max-width: 641px) {
    .planet-nav-arrow {
      top: 25%;
      width: 2rem;
      height: 2rem; } }
  .planet-nav-arrow:before {
    position: absolute;
    display: block;
    font-family: 'Roboto', sans-serif;
    font-weight: 900;
    font-size: 1.25em;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 0.1em;
    color: rgba(184, 158, 78, 0.75);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    opacity: 0;
    -webkit-transition: 0.05s;
    -moz-transition: 0.05s;
    transition: 0.05s; }
    .mobile .planet-nav-arrow:before {
      display: none; }
  .planet-nav-arrow#planet-left {
    left: 2.25rem;
    border-radius: 0.25em 0 0.25em 0.5em;
    border-left: 3px solid #b89e4e;
    border-bottom: 3px solid #b89e4e;
    -webkit-transform: translate3d(0, -40%, 0) rotate(45deg);
    -moz-transform: translate3d(0, -40%, 0) rotate(45deg);
    -ms-transform: translate3d(0, -40%, 0) rotate(45deg);
    -o-transform: translate3d(0, -40%, 0) rotate(45deg);
    transform: translate3d(0, -40%, 0) rotate(45deg); }
    .planet-nav-arrow#planet-left:before {
      left: 25%;
      top: -1%;
      -webkit-transform: rotate(-45deg);
      -moz-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
      -o-transform: rotate(-45deg);
      transform: rotate(-45deg);
      content: 'Previous'; }
    @media only screen and (max-width: 641px) {
      .planet-nav-arrow#planet-left {
        left: 1.75rem; } }
  .planet-nav-arrow#planet-right {
    right: 2.25rem;
    border-radius: 0 0.25em 0.5em 0.25em;
    border-right: 3px solid #b89e4e;
    border-bottom: 3px solid #b89e4e;
    -webkit-transform: translate3d(0, -40%, 0) rotate(-45deg);
    -moz-transform: translate3d(0, -40%, 0) rotate(-45deg);
    -ms-transform: translate3d(0, -40%, 0) rotate(-45deg);
    -o-transform: translate3d(0, -40%, 0) rotate(-45deg);
    transform: translate3d(0, -40%, 0) rotate(-45deg); }
    .planet-nav-arrow#planet-right:before {
      right: 30%;
      top: 22%;
      -webkit-transform: rotate(45deg);
      -moz-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      -o-transform: rotate(45deg);
      transform: rotate(45deg);
      content: 'Next'; }
    @media only screen and (max-width: 641px) {
      .planet-nav-arrow#planet-right {
        right: 1.75rem; } }
  .planet-nav-arrow.zoomed {
    pointer-events: auto;
    opacity: 0.5;
    -webkit-transition: 0.1s;
    -moz-transition: 0.1s;
    transition: 0.1s; }
    .planet-nav-arrow.zoomed:hover, .planet-nav-arrow.zoomed:active {
      opacity: 1; }
      .planet-nav-arrow.zoomed:hover:before, .planet-nav-arrow.zoomed:active:before {
        opacity: 1; }

/* TEXT SETTINGS */
h1,
h2,
h3 {
  position: relative;
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: 'kern';
  -moz-font-feature-settings: 'kern';
  -moz-font-feature-settings: 'kern=1';
  font-feature-settings: 'kern' 1;
  font-kerning: normal;
  font-family: 'freight-display-pro', georgia, sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1 {
  font-size: 3.5em;
  color: white; }

h2 {
  padding: 0.75rem 1.25rem 0.85rem;
  margin-bottom: 1.25rem;
  position: relative;
  overflow: hidden;
  font-size: 3em;
  color: white;
  border-radius: 0.5rem 0.5rem 0 0;
  background: #987d2a;
  background: -webkit-linear-gradient( top , #775c09 0%, #987d2a 75%);
  background: linear-gradient(to bottom, #775c09 0%, #987d2a 75%); }
  h2:before {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: block;
    z-index: 2;
    background: url("/img/texture-noise.png");
    background-size: 100px auto;
    opacity: 0.75;
    content: ''; }
  h2:after {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    display: block;
    background: rgba(119, 92, 9, 0.35);
    content: ''; }
  @media only screen and (max-width: 641px) {
    h2 {
      padding: 0.65rem 1rem 0.75rem;
      margin-bottom: 1rem; } }

h3 {
  font-size: 2.75em;
  line-height: 0.85;
  color: #b89e4e;
  text-shadow: 0 0 10px black; }

.load-text {
  display: inline-block;
  padding: 0 0 0.5rem 0.25em;
  text-align: center;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  font-size: 0.9em;
  letter-spacing: 0.25em;
  line-height: 1.3;
  color: #775c09;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  border-bottom: 1px solid #987d2a; }

.load-text-credit {
  display: block;
  padding: 0.7rem 0 0 0.04em;
  text-align: center;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-size: 0.9em;
  letter-spacing: 0.2em;
  line-height: 1.3;
  color: #775c09;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  .load-text-credit a {
    display: inline-block;
    border-bottom: 2px solid rgba(119, 92, 9, 0.5);
    padding-left: 0.25em;
    color: #775c09;
    text-decoration: none;
    -webkit-transition: border-color 0.1s;
    -moz-transition: border-color 0.1s;
    transition: border-color 0.1s; }
    .load-text-credit a:hover, .load-text-credit a:active, .load-text-credit a:focus {
      border-color: #775c09; }

#load-button {
  text-align: center;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-size: 1.15em;
  letter-spacing: 0.2em;
  line-height: 1;
  text-decoration: none;
  color: rgba(119, 92, 9, 0.5);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  @media only screen and (max-width: 641px) {
    #load-button {
      font-size: 1em; } }
  #load-button.loaded {
    color: rgba(255, 255, 255, 0.85);
    text-shadow: 1px 1px #987d2a, -1px -1px #987d2a, 0px 1px #987d2a, 1px 0px #987d2a, -1px 0px #987d2a, 0px -1px #987d2a; }
    #load-button.loaded:hover, #load-button.loaded:active {
      color: white;
      text-shadow: 1px 1px rgba(119, 92, 9, 0.5), -1px -1px rgba(119, 92, 9, 0.5), 0px 1px rgba(119, 92, 9, 0.5), 1px 0px rgba(119, 92, 9, 0.5), -1px 0px rgba(119, 92, 9, 0.5), 0px -1px rgba(119, 92, 9, 0.5); }

.description {
  display: block;
  position: relative;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-size: 0.9em;
  letter-spacing: 0.2em;
  line-height: 1.2;
  color: #775c09;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.filter-title {
  display: block;
  padding-bottom: 1.1rem;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-size: 0.75em;
  letter-spacing: 0.05em;
  color: #775c09; }

label {
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  font-size: 0.9em;
  letter-spacing: 0.025em;
  color: rgba(255, 255, 255, 0.5);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-transition: color 0.1s;
  -moz-transition: color 0.1s;
  transition: color 0.1s; }
  label:hover, label:active, label:focus {
    color: rgba(255, 255, 255, 0.65); }
  input[type=checkbox]:checked + label {
    color: white; }

.social-share {
  display: block;
  margin-bottom: 1.25em;
  padding: 1.25em 0;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  text-transform: uppercase;
  font-size: 0.875em;
  letter-spacing: 0.1em;
  color: #987d2a;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  text-decoration: none;
  border: 2px solid rgba(119, 92, 9, 0.75);
  border-radius: 0.5rem;
  -webkit-transition: 0.2s;
  -moz-transition: 0.2s;
  transition: 0.2s; }
  .social-share:last-child {
    margin-bottom: 0; }
  .social-share:hover, .social-share:active, .social-share:focus {
    color: #b89e4e;
    border-color: #987d2a; }

.site-credits {
  display: block;
  padding: 3.5rem 1.5rem 0 1.5rem;
  text-transform: uppercase;
  font-family: 'Roboto', sans-serif;
  font-weight: 700;
  font-size: 0.75em;
  line-height: 1.5;
  color: white;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  opacity: 0.3; }
  .site-credits a {
    color: white;
    text-decoration: underline;
    font-weight: 900; }

.planet-data-text {
  display: block;
  margin-bottom: 0.6em;
  float: left;
  width: 50%;
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  text-transform: uppercase;
  font-size: 0.85em;
  letter-spacing: 0.075em;
  color: rgba(13, 13, 13, 0.6); }
  .planet-data-text .planet-data-value {
    color: #775c09;
    font-weight: 900; }
  .planet-data-text:nth-child(5) {
    clear: both;
    float: none;
    width: 100%; }
  .planet-data-text:last-child {
    clear: both;
    float: none;
    width: 100%;
    padding-bottom: 1.25rem;
    border-bottom: 1px solid #987d2a;
    margin-bottom: 1.25rem; }
    @media only screen and (max-width: 641px) {
      .planet-data-text:last-child {
        padding-bottom: 1rem;
        margin-bottom: 1rem; } }
  @media only screen and (max-width: 641px) {
    .planet-data-text {
      float: none;
      width: 100%; } }

.sound-text {
  cursor: pointer;
  display: block;
  text-align: right;
  float: right;
  padding: 0;
  font-family: 'Roboto', sans-serif;
  font-weight: 500;
  font-size: 0.85em;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.075em;
  line-height: 1.2;
  background: none;
  border: 0;
  outline: none;
  color: #987d2a;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  opacity: 0.75;
  -webkit-transition: opacity 0.1s;
  -moz-transition: opacity 0.1s;
  transition: opacity 0.1s; }
  .sound-text:after {
    margin-left: 0.5em;
    font-weight: 900;
    color: #b89e4e;
    content: 'On'; }
  .sound-text:hover, .sound-text:active, .sound-text:focus {
    opacity: 1; }
  .sound-text.off:after {
    content: 'Off'; }

.built-by-text {
  display: block;
  padding: 1.75rem 0 0.75rem 0.5em;
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  font-size: 0.75em;
  text-transform: uppercase;
  text-align: center;
  letter-spacing: 0.5em;
  color: rgba(119, 92, 9, 0.75);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  border-top: 1px solid rgba(184, 158, 78, 0.25); }

#error-update span,
#error-update a {
  position: relative;
  font-family: 'Roboto', sans-serif;
  text-transform: uppercase; }

#error-update span {
  display: block;
  margin-bottom: 1.5em;
  font-size: 1.15em;
  line-height: 1.3;
  color: #775c09; }

#error-update a {
  display: inline-block;
  padding: 1em 2em;
  font-size: 1.15em;
  background: #d5c697;
  color: #775c09;
  text-decoration: none;
  border: 2px solid #775c09;
  border-radius: 0.5em;
  -webkit-transition: 0.15s;
  -moz-transition: 0.15s;
  transition: 0.15s; }
  #error-update a:hover, #error-update a:active {
    background: #cebc85; }

/* IMAGES */
img {
  display: block;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0; }

.built-link {
  display: block;
  margin: 0 auto;
  width: 35%; }

/* LOADER */
#load-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background: url("/img/load-bkg.jpg") no-repeat, #b89e4e;
  background-size: cover;
  background-position: right center;
  font-size: 1rem; }
  #load-overlay:before {
    position: absolute;
    display: block;
    top: 0;
    right: 0;
    width: 8rem;
    height: 4.75rem;
    z-index: 10;
    background: #302504;
    border-radius: 0 0 0 0.5rem;
    border-left: 3px solid #987d2a;
    border-bottom: 3px solid #987d2a;
    content: ''; }
  #load-overlay:after {
    position: absolute;
    display: block;
    top: 1.5em;
    right: 1.5em;
    left: 1.5em;
    bottom: 1.5em;
    z-index: 5;
    pointer-events: none;
    border: 6px double #987d2a;
    border-radius: 1.5em;
    content: ''; }

#load-overlay > svg,
#load-logo {
  position: absolute;
  left: 50%;
  top: 42.5%;
  height: 100%;
  width: auto;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  pointer-events: none; }
  .mobile #load-overlay > svg, .mobile
  #load-logo {
    width: 60%;
    height: auto;
    top: 41%; }
    @media only screen and (min-width: 802px) and (max-width: 1025px) {
      .mobile #load-overlay > svg, .mobile
      #load-logo {
        width: 37%; } }
    @media only screen and (min-width: 642px) and (max-width: 801px) {
      .mobile #load-overlay > svg, .mobile
      #load-logo {
        top: 42%; } }

#load-text-container {
  position: absolute;
  top: 56%;
  left: 0;
  width: 100%;
  text-align: center; }
  @media only screen and (max-width: 641px) {
    #load-text-container {
      width: 72%;
      left: 14%;
      top: 53%; } }

#load-button {
  display: block;
  position: absolute;
  left: 50%;
  bottom: 5.5rem;
  padding: 1.25em 1.25em 1.25em 1.45em;
  width: 24rem;
  background: rgba(152, 125, 42, 0.25);
  border: 2px solid rgba(119, 92, 9, 0.25);
  border-radius: 0.5rem;
  overflow: hidden;
  cursor: default;
  -webkit-transform: translate(-50%, 0);
  -moz-transform: translate(-50%, 0);
  -ms-transform: translate(-50%, 0);
  -o-transform: translate(-50%, 0);
  transform: translate(-50%, 0); }
  @media only screen and (max-width: 641px) {
    #load-button {
      padding: 1.25em 1.05em 1.25em 1.25em;
      width: 72%;
      bottom: 3.5rem; } }
  #load-button:before {
    position: relative;
    z-index: 5;
    content: 'Loading...'; }
  #load-button:after {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 0;
    display: block;
    z-index: 3;
    background: rgba(184, 158, 78, 0.5);
    content: ''; }
  #load-button.loaded {
    border-color: rgba(255, 255, 255, 0.75);
    background: rgba(119, 92, 9, 0.5);
    cursor: pointer; }
    #load-button.loaded:before {
      content: 'Explore The Galaxy'; }
    #load-button.loaded:after {
      width: 100%;
      -webkit-animation: none;
      -moz-animation: none;
      animation: none; }
    #load-button.loaded:hover, #load-button.loaded:active {
      background: rgba(119, 92, 9, 0.75);
      border-color: white; }
  #load-button.launching {
    opacity: 0; }
  #load-button.error {
    opacity: 0; }

@-webkit-keyframes loading-button {
  from {
    width: 0; }
  to {
    width: 100%; } }

@-moz-keyframes loading-button {
  from {
    width: 0; }
  to {
    width: 100%; } }

@keyframes loading-button {
  from {
    width: 0; }
  to {
    width: 100%; } }

#logo-stroke,
#logo-fill {
  -webkit-transform-origin: 1489px 400px;
  -moz-transform-origin: 1489px 400px;
  -ms-transform-origin: 1489px 400px;
  -o-transform-origin: 1489px 400px;
  transform-origin: 1489px 400px; }

#logo-stroke {
  fill: none;
  stroke: #987d2a;
  stroke-width: 8px;
  -webkit-transition: 0;
  -moz-transition: 0;
  transition: 0;
  -webkit-transform: scale(0.2);
  -moz-transform: scale(0.2);
  -ms-transform: scale(0.2);
  -o-transform: scale(0.2);
  transform: scale(0.2); }
  .mobile #logo-stroke {
    stroke-width: 10px;
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1); }

#logo-fill {
  fill: white;
  opacity: 0; }

@-webkit-keyframes logo-stroke-animate {
  to {
    stroke-dashoffset: 0; } }

@-moz-keyframes logo-stroke-animate {
  to {
    stroke-dashoffset: 0; } }

@keyframes logo-stroke-animate {
  to {
    stroke-dashoffset: 0; } }

@-webkit-keyframes logo-fill-animate {
  to {
    opacity: 1; } }

@-moz-keyframes logo-fill-animate {
  to {
    opacity: 1; } }

@keyframes logo-fill-animate {
  to {
    opacity: 1; } }

#classic-wipe {
  position: absolute;
  top: 0;
  left: 130%;
  bottom: 0;
  width: 100%;
  height: 100%;
  background: black; }
  #classic-wipe:before {
    position: absolute;
    right: 100%;
    top: 0;
    bottom: 0;
    width: 25%;
    display: block;
    background: url("/img/grad-right.png") repeat-y;
    background-size: 100% 1px;
    content: ''; }

/* LONG AGO OVERLAY */
#long-ago {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  will-change: auto; }
  #long-ago img {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 50%;
    -webkit-transform: translate3d(-50%, -50%, 0);
    -moz-transform: translate3d(-50%, -50%, 0);
    -ms-transform: translate3d(-50%, -50%, 0);
    -o-transform: translate3d(-50%, -50%, 0);
    transform: translate3d(-50%, -50%, 0); }

/* MAIN AREAS */
html {
  background: black;
  font-size: 100%;
  overflow: hidden; }

body {
  overflow: hidden; }
  body.desktop.nav-open {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }

main {
  width: 100%;
  height: 100%;
  background: #0d0d0d; }
  .mobile main {
    max-height: 100vh;
    overflow: hidden; }

#star-map {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  will-change: auto; }
  #star-map:before {
    position: absolute;
    display: block;
    width: 0.75rem;
    height: 100%;
    top: 0;
    right: 100%;
    background: -webkit-linear-gradient( left , transparent 0%, rgba(0, 0, 0, 0.35) 60%, black 100%);
    background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.35) 60%, black 100%);
    opacity: 0.3;
    content: ''; }

#planet-title {
  display: none;
  position: absolute;
  left: 50%;
  bottom: 2.25rem;
  text-align: center;
  -webkit-transform: translateX(-50%);
  -moz-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  -o-transform: translateX(-50%);
  transform: translateX(-50%); }

#planet-data-overlay {
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  width: 35rem;
  font-size: 1rem;
  background: white;
  border-radius: 0.6rem 0.6rem 0.5rem 0.5rem;
  -webkit-transform: translate(-50%, 165%);
  -moz-transform: translate(-50%, 165%);
  -ms-transform: translate(-50%, 165%);
  -o-transform: translate(-50%, 165%);
  transform: translate(-50%, 165%); }
  #planet-data-overlay:before, #planet-data-overlay:after {
    position: absolute;
    top: 0;
    left: 50%;
    width: 2rem;
    height: 2rem;
    display: block;
    z-index: -1;
    border-radius: 4px;
    -webkit-transform: translate(-50%, -40%) rotate(45deg);
    -moz-transform: translate(-50%, -40%) rotate(45deg);
    -ms-transform: translate(-50%, -40%) rotate(45deg);
    -o-transform: translate(-50%, -40%) rotate(45deg);
    transform: translate(-50%, -40%) rotate(45deg);
    content: ''; }
  #planet-data-overlay:before {
    background: #775c09; }
  #planet-data-overlay:after {
    background: url("/img/texture-noise.png");
    background-size: 100px auto;
    opacity: 0.875; }
  #planet-data-overlay .planet-data-column {
    padding: 0 1.25rem; }
    @media only screen and (max-width: 641px) {
      #planet-data-overlay .planet-data-column {
        padding: 0 1rem; } }
  #planet-data-overlay .planet-films-column {
    padding: 0 1.25rem; }
    #planet-data-overlay .planet-films-column:after {
      display: table;
      clear: both;
      content: ''; }
    @media only screen and (max-width: 641px) {
      #planet-data-overlay .planet-films-column {
        padding: 0 1rem; } }
  @media only screen and (min-width: 1401px) {
    #planet-data-overlay {
      font-size: 1.2rem;
      width: 40rem; } }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    #planet-data-overlay {
      -webkit-transform: translate(-50%, 200%);
      -moz-transform: translate(-50%, 200%);
      -ms-transform: translate(-50%, 200%);
      -o-transform: translate(-50%, 200%);
      transform: translate(-50%, 200%); } }
  @media only screen and (max-width: 641px) {
    #planet-data-overlay {
      font-size: 0.75rem;
      width: 21rem; } }

.planet-film {
  float: left;
  width: 15%;
  margin-right: 2%;
  margin-bottom: 1.25rem; }
  .planet-film.disabled {
    opacity: 0.25; }
  .planet-film:last-child {
    margin-right: 0; }
  @media only screen and (max-width: 641px) {
    .planet-film {
      margin-bottom: 1rem; } }
  .planet-film:not(.disabled):before {
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 10;
    background: url("/img/texture-noise.png"), rgba(152, 125, 42, 0.75);
    background-size: 100px auto;
    border-radius: 100%;
    border: 2px solid #b89e4e;
    content: '';
    opacity: 0;
    -webkit-transition: opacity 0.15s;
    -moz-transition: opacity 0.15s;
    transition: opacity 0.15s; }
  .planet-film:after {
    position: absolute;
    left: 50%;
    top: 50%;
    z-index: 15;
    font-family: 'freight-display-pro', georgia, sans-serif;
    font-weight: 900;
    font-size: 1.25em;
    color: white;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-transform: translate3d(-50%, -50%, 0);
    -moz-transform: translate3d(-50%, -50%, 0);
    -ms-transform: translate3d(-50%, -50%, 0);
    -o-transform: translate3d(-50%, -50%, 0);
    transform: translate3d(-50%, -50%, 0);
    content: ''; }
  .planet-film#episode1:after {
    content: 'I'; }
  .planet-film#episode2:after {
    content: 'II'; }
  .planet-film#episode3:after {
    content: 'III'; }
  .planet-film#episode4:after {
    content: 'IV'; }
  .planet-film#episode5:after {
    content: 'V'; }
  .planet-film#episode6:after {
    content: 'VI'; }
  .planet-film img {
    border: 2px solid #b89e4e;
    border-radius: 100%; }
  .planet-film:hover:before, .planet-film:hover:after {
    opacity: 1; }

#error-update {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 2rem;
  text-align: center;
  background: white;
  border-radius: 0.5em;
  box-shadow: 0 0 30px #0d0d0d;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }
  #error-update * {
    z-index: 5; }
  #error-update:before {
    position: absolute;
    top: 0.5em;
    left: 0.5em;
    right: 0.5em;
    bottom: 0.5em;
    display: block;
    z-index: 2;
    border: 2px solid #b89e4e;
    border-radius: 0.4em;
    content: ''; }

#error-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #987d2a;
  opacity: 0.75; }

#error-update,
#error-overlay {
  display: none; }

#r2-404 {
  position: absolute;
  right: 0;
  top: 50%;
  height: 100%;
  -webkit-transform: translate3d(0, -50%, 0);
  -moz-transform: translate3d(0, -50%, 0);
  -ms-transform: translate3d(0, -50%, 0);
  -o-transform: translate3d(0, -50%, 0);
  transform: translate3d(0, -50%, 0); }
  #r2-404 img {
    height: 100%;
    width: auto; }

/* NAV */
nav {
  position: relative;
  width: 23rem;
  height: 100%;
  font-size: 1rem; }
  .mobile nav {
    overflow-y: auto; }
  @media only screen and (max-width: 641px) {
    nav {
      width: 81%;
      width: -moz-calc(100% - 4.5rem);
      width: -o-calc(100% - 4.5rem);
      width: -webkit-calc(100% - 4.5rem);
      width: calc(100% - 4.5rem);
      font-size: 0.85rem; } }

.page-title {
  padding: 1.5rem 1.5rem 1.75rem 1.5rem;
  margin-bottom: 2.25rem;
  background: #b89e4e;
  background: -webkit-linear-gradient( top , #775c09 0%, #b89e4e 75%);
  background: linear-gradient(to bottom, #775c09 0%, #b89e4e 75%);
  border-bottom: 1px solid rgba(255, 255, 255, 0.15); }
  .page-title * {
    z-index: 5; }
  .page-title:before {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: block;
    z-index: 2;
    background: url("/img/texture-noise.png");
    background-size: 100px auto;
    opacity: 0.875;
    content: ''; }

.filter-list {
  padding: 1.5rem 1.5rem 0; }
  .filter-list:last-of-type {
    margin-bottom: 0; }

.filter-list-single {
  position: relative;
  border-bottom: 1px solid rgba(184, 158, 78, 0.15); }
  .filter-list-single:first-of-type {
    border-top: 1px solid #775c09; }
  .filter-list-single:last-child {
    border: 0; }

input[type=checkbox] {
  position: absolute;
  left: 0;
  top: 50%;
  z-index: 1;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  opacity: 0;
  outline: none;
  cursor: pointer; }

label {
  cursor: pointer;
  display: block;
  padding: 1.4rem 0 1.4rem 2em; }
  label:before {
    position: absolute;
    left: 0;
    top: 50%;
    z-index: 5;
    display: block;
    width: 0.8rem;
    height: 0.8rem;
    margin-top: -0.45rem;
    border-radius: 100%;
    border: 2px solid white;
    content: ''; }
  label:after {
    position: absolute;
    left: 0;
    top: 50%;
    z-index: 3;
    display: block;
    width: 0.8rem;
    height: 0.8rem;
    margin-top: -0.45rem;
    background: black;
    border: 4px solid black;
    border-radius: 100%;
    -webkit-transition: background 0.1s;
    -moz-transition: background 0.1s;
    transition: background 0.1s;
    content: ''; }
  input[type=checkbox]:checked + label:after {
    background: #b89e4e; }

.share-buttons {
  padding: 2.5rem 1.5rem 0; }

.built-by {
  margin-top: 3.6rem;
  padding: 0 1.5rem 2.25rem; }

/* NAV FUNCTION */
#star-map:after {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: block;
  z-index: 200;
  pointer-events: none;
  background: black;
  opacity: 0;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transition: opacity 0.15s cubic-bezier(0.47, 0, 0.745, 0.715);
  -moz-transition: opacity 0.15s cubic-bezier(0.47, 0, 0.745, 0.715);
  transition: opacity 0.15s cubic-bezier(0.47, 0, 0.745, 0.715);
  content: ''; }

.nav-open #star-map:after {
  pointer-events: auto;
  opacity: 0.5; }

/* HEADER */
/* FOOTER */

/*# sourceMappingURL=data:application/json;base64, */
